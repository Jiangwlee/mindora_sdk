version: '3.8'

# 测试环境配置 - 针对CI/CD和快速测试优化
# 特点：内存数据存储、快速启动、最小资源占用

services:
  # 数据库服务 - 测试配置
  postgres:
    image: postgres:16.4
    container_name: mindora_postgres_test
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mindora_test}
      POSTGRES_USER: ${POSTGRES_USER:-mindora_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mindora_test_password}
      POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS:-50}
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS:-128MB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    tmpfs:
      - /var/lib/postgresql/data  # 内存存储，测试后自动清理
    networks:
      - mindora_test_network
    restart: "no"  # 测试环境不自动重启
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mindora_user} -d ${POSTGRES_DB:-mindora_test}"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Redis缓存 - 测试配置
  redis:
    image: redis:7.4-alpine
    container_name: mindora_redis_test
    command: |
      redis-server --requirepass ${REDIS_PASSWORD:-redis_test_password}
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save ""  # 禁用持久化
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - mindora_test_network
    restart: "no"
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD:-redis_test_password}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  # MinIO对象存储 - 测试配置
  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    container_name: mindora_minio_test
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-testuser}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-testpassword123}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    tmpfs:
      - /data  # 内存存储
    networks:
      - mindora_test_network
    restart: "no"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  # RabbitMQ消息队列 - 测试配置
  rabbitmq:
    image: rabbitmq:4.1-management
    container_name: mindora_rabbitmq_test
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-testuser}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-testpassword}
      RABBITMQ_VM_MEMORY_HIGH_WATERMARK: 0.3
    ports:
      - "${RABBITMQ_AMQP_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    tmpfs:
      - /var/lib/rabbitmq  # 内存存储
    networks:
      - mindora_test_network
    restart: "no"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Elasticsearch搜索引擎 - 测试配置
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.19.2
    container_name: mindora_elasticsearch_test
    environment:
      - discovery.type=single-node
      - cluster.name=mindora-test-cluster
      - node.name=mindora-test-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "${ELASTICSEARCH_HTTP_PORT:-9200}:9200"
    tmpfs:
      - /usr/share/elasticsearch/data  # 内存存储
    networks:
      - mindora_test_network
    restart: "no"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Qdrant向量数据库 - 测试配置
  qdrant:
    image: qdrant/qdrant:v1.15.3
    container_name: mindora_qdrant_test
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__STORAGE__STORAGE_PATH: /tmp/qdrant_storage
    ports:
      - "${QDRANT_PORT:-6333}:6333"
    tmpfs:
      - /tmp/qdrant_storage  # 内存存储
    networks:
      - mindora_test_network
    restart: "no"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Consul服务发现 - 测试配置
  consul:
    image: hashicorp/consul:1.19
    container_name: mindora_consul_test
    command: consul agent -dev -client=0.0.0.0 -ui -log-level=WARN
    environment:
      CONSUL_BIND_INTERFACE: eth0
    ports:
      - "${CONSUL_HTTP_PORT:-8500}:8500"
    tmpfs:
      - /consul/data  # 内存存储
    networks:
      - mindora_test_network
    restart: "no"
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

# 测试网络配置
networks:
  mindora_test_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# 测试环境不使用持久化卷
volumes: {}